name: Build Retro Pi TV

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: build
  cancel-in-progress: true

env:
  POETRY_VERSION: 1.7.1
  BASE_IMAGE_URL: https://downloads.raspberrypi.com/raspios_lite_arm64/images/raspios_lite_arm64-2023-12-11/2023-12-11-raspios-bookworm-arm64-lite.img.xz

jobs:
  build:
    runs-on: ubuntu-22.04
    name: Build image
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        id: vars
        name: Set vars
        shell: bash
        run: |
          echo "image-path=$(date +%Y-%m-%d)-raspios-bookworm-arm64-retro-pi-tv.img" >> "${GITHUB_OUTPUT}"
      -
        name: Create Raspberry Pi OS image
        uses: dtcooper/rpi-image-modifier@v1
        id: create-image
        env:
          RUN_RETRO_PI_TV_BUILD_SCRIPT: "1"
        with:
          base-image-url: ${{ env.BASE_IMAGE_URL }}
          script-path : image/build.sh
          env-vars: RUN_RETRO_PI_TV_BUILD_SCRIPT,POETRY_VERSION,GITHUB_REF_NAME,GITHUB_REPOSITORY
          image-path: ${{ steps.vars.outputs.image-path }}
          shrink: false
          cache: true
          image-maxsize: '6.5G'
      -
        name: Create an empty third partition
        shell: bash
        env:
          IMAGE_PATH: ${{ steps.create-image.outputs.image-path }}
        run: |
          echo 'Resizing image to 7G'
          fallocate -l 7G "${IMAGE_PATH}"
          SECOND_PARTITION_END="$(fdisk -l "${IMAGE_PATH}" | grep img2 | awk '{ print $3 }')"
          THIRD_PARTITION_START="$((SECOND_PARTITION_END + 1))"
          echo "Creating third partition"
          fdisk "${IMAGE_PATH}" <<EOF
          n
          p
          3
          ${THIRD_PARTITION_START}
          -1
          t
          3
          7
          w
          q
          EOF
          echo 'Compressing image (this may take a while)'
          xz -T0 "${IMAGE_PATH}"
      -
        name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: built-image
          path: ${{ steps.create-image.outputs.image-path }}.xz
          if-no-files-found: error
          retention-days: 2
          compression-level: 0  # Already compressed with xz above
      -
        name: Debug
        uses: lhotari/action-upterm@v1
        with:
          limit-access-to-actor: true
          wait-timeout-minutes: 5
